class MyLinkedList {

    class node{
        int data;
        node next;
        node prev;
        public node()
        {
            
        }
        public node(int d)
        {
            this.data=d;
            this.next=null;
            this.prev=null;
        }
    }
    
      private node head;
    private int count;
     public MyLinkedList() {
         head = new node();
         count=0;
    }
        public int get(int index) {
              if(index>= count)
                  return -1;
        
    node temp=head;
    while(index>=1)
    {
        temp=temp.next;
        index--;
    }
        return temp.data;
    }
    
    public void addAtHead(int val) {
        node newN=new node(val);
        if(count==0)
        {
            head=newN;
        }
        else
        {
            newN.next=head;
            head.prev=newN;
            head=newN;
        }
        count++;
        
    }
    
    public void addAtTail(int val) {
        if(count==0)
        {
            addAtHead(val);
        }
        node newN=new node(val);
        node temp=head;
        while(temp.next!=null)
        {
            temp=temp.next;
        }
        temp.next=newN;
        newN.prev=temp;
        count++;
        
    }
    public void addAtIndex(int index, int val) {
     if(index==count)
        {
          addAtTail(val);
        }
        else if(index ==0)
        {
        addAtHead(val);
        }
        else
        {
            int cnt=0;
            node temp=head;
            while(cnt<index-1)
            {
                temp=temp.next;
                cnt++;
            }
            node newN=new node(val);
             newN.next=temp.next;
            temp.next.prev=newN;
            temp.next=newN;
            newN.prev=temp;
            count++;
           
        }
    }
    
        public void deleteAtIndex(int index) {
         if(index>=count || index<0)
            return ;
        else if(index==0 )
        {
            if(head.next==null)
                head=null;
            else{head=head.next;
            head.prev=null;}
        }
        else
        {
            int cnt=0;
            node temp=head;
            while(cnt<index-1)
            {
                temp=temp.next;
                cnt++;
            }
            temp.next=temp.next.next;
            if(temp.next!=null)
            temp.next.prev=temp;
        }
        count--;
     }
}
